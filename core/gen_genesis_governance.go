// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package core

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*genesisGovernanceMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (g GovernanceAccount) MarshalJSON() ([]byte, error) {
	type GovernanceAccount struct {
		SignerPubKey hexutil.Bytes `json:"signer" gencodec:"required"`
	}
	var enc GovernanceAccount
	enc.SignerPubKey = g.SignerPubKey
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (g *GovernanceAccount) UnmarshalJSON(input []byte) error {
	type GovernanceAccount struct {
		SignerPubKey *hexutil.Bytes `json:"signer" gencodec:"required"`
	}
	var dec GovernanceAccount
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.SignerPubKey == nil {
		return errors.New("missing required field 'signer' for GovernanceAccount")
	}
	g.SignerPubKey = *dec.SignerPubKey
	return nil
}
